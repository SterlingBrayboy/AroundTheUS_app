!function(){"use strict";var e=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}},t=class extends e{constructor(e,t){super({popupSelector:e}),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=[...this._form.querySelectorAll(".modal__input")]}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}_getInputValues(){const e={};return this._inputEls.forEach((t=>{e[t.name]=t.value})),e}},s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=document.querySelector(t),this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},r=class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(`.${t}`)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}},n=class{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=n,this._cardSelector=t}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}isLiked(){return this._isLiked}handleLike=()=>{this._likeButton.classList.toggle("gallery__card-like_active")};handleDelete=()=>{this._element.remove(),this._element=null};updateLikeView(){this._isLiked?this._likeButton.classList.add("gallery__card-like_active"):this._likeButton.classList.remove("gallery__card-like_active")}_setEventListeners(){this._cardTrash.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}generateCard(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".gallery__card-like"),this._deleteFormButton=document.querySelector("#delete-card-button"),this._cardTrash=this._element.querySelector(".gallery__card-trash"),this._cardImageEl=this._element.querySelector(".gallery__card-image"),this._setEventListeners(),this._cardImageEl.src=this._link,this._cardImageEl.alt=`Photo of ${this._name}`,this._element.querySelector(".gallery__card-title").textContent=this._name,this.updateLikeView(),this._element}};const i={inputSelector:".modal__input",submitButtonSelector:".modal__container-button",inactiveButtonClass:"modal__container-button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__input-error_visible"},o={profileEditModal:"#profile__edit-modal",profileAddModal:"#profile__add-modal",profileEditForm:document.querySelector("#edit-card-form"),profileAddForm:document.querySelector("#add-card-form"),nameInput:document.querySelector("#profile-name-input"),profileTitle:document.querySelector("#profile-title"),descriptionInput:document.querySelector("#profile-description-input"),avatarInput:document.querySelector("#avatar-url-input"),avatarImage:document.querySelector(".profile__avatar"),avatarIcon:document.querySelector(".profile__icon"),avatarModal:"#avatar-modal",avatarModalButton:document.querySelector("#avatar-modal-button"),addCardClass:"#profile__add-modal",addModalButton:document.querySelector("#add-button"),editCardClass:"#profile__edit-modal",deleteCardClass:"#delete-modal",editModalButton:document.querySelector("#edit-button"),profileEditButton:document.querySelector("#profile__edit-button"),profileAddButton:document.querySelector(".profile__add-button")},a=new class{constructor(e){this._headers=e.headers,this.baseUrl=e.baseUrl}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch(this.baseUrl+"/cards",{headers:this._headers}).then(this._checkResponse)}loadInfo(){return fetch(this.baseUrl+"/users/me",{method:"GET",avatar:"https://practicum-content.s3.us-west-1.amazonaws.com/frontend-developer/moved_avatar.jpg",cohort:"group-42",headers:this._headers}).then(this._checkResponse)}editProfile(e,t){return fetch(this.baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}addNewCard(e){return fetch(this.baseUrl+"/cards",{method:"POST",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCard(e){return fetch(this.baseUrl+`/cards/${e}`,{method:"DELETE",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({_id:e})}).then(this._checkResponse)}updateLike(e,t){return fetch(this.baseUrl+`/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers,"Content-Type":"application/json"}).then(this._checkResponse)}updateAvatar(e){return fetch(this.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,"Content-Type":"application/json",body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ebfbe580-59e8-4623-9d1e-5edf14608279","Content-Type":"application/json"}});let l;a.getInitialCards().then((e=>{l=new r({items:e,renderer:e=>{h(e)}},"gallery__cards"),l.renderItems(),console.log(e)})).catch(console.error),a.loadInfo().then((e=>{console.log(e),y.setUserInfo(e.name,e.about),y.setAvatar(e.avatar)})).catch(console.error);const d=new class extends e{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__picture-src"),this._title=this._popupElement.querySelector(".modal__picture-title")}open(e){let{link:t,name:s}=e;this._image.src=t,this._image.alt=`A photo of ${s}`,this._title.textContent=`${s}`,super.open()}}("#picture-modal");function c(e,t){e.textContent=t}function u(e){d.open(e)}function h(e){const t=new n(e,"#card-template",u,p,m);l.addItem(t.generateCard())}d.setEventListeners();const _=new class extends e{constructor(e){super({popupSelector:e}),this._formEl=this._popupElement.querySelector(".modal__form")}setEventListeners(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}setSubmitAction(e){this._handleFormSubmit=e}}(o.deleteCardClass);function p(e){_.open(),_.setSubmitAction((()=>{a.deleteCard(e._id).then((()=>{_.close(),e.handleDelete()})).catch(console.error)}))}function m(e){a.updateLike(e._id,e.isLiked()).then((()=>{e.handleLike(),console.log(e)})).catch(console.error)}_.setEventListeners();const v=new s(i,o.profileAddModal);v.enableValidation(),new s(i,o.profileEditModal).enableValidation(),new s(i,o.avatarModal).enableValidation();const E=new t(o.addCardClass,(function(e){c(o.addModalButton,"Saving..."),a.addNewCard(e).then((e=>{console.log(e),h(e),o.profileAddForm.reset(),v.toggleButtonState(),E.close()})).catch(console.error).finally((()=>{c(o.addModalButton,"Save")}))}));E.setEventListeners(),o.profileAddButton.addEventListener("click",(()=>{E.open()}));const f=new t(o.editCardClass,(function(e){c(o.editModalButton,"Saving..."),a.editProfile(e.name,e.description).then((e=>{y.setUserInfo(e.name,e.about),console.log(e),f.close()})).catch(console.error).finally((()=>{c(o.editModalButton,"Save")}))}));f.setEventListeners(),o.profileEditButton.addEventListener("click",(()=>{!function(){const e=y.getUserInfo();o.nameInput.value=e.name,o.descriptionInput.value=e.description,f.open()}()}));const S=new t(o.avatarModal,(function(e){c(o.avatarModalButton,"Saving..."),a.updateAvatar(e.link).then((t=>{o.avatarImage.src=e.link,console.log(t),S.close()})).catch(console.error).finally((()=>{c(o.avatarModalButton,"Save")}))}));S.setEventListeners(),o.avatarIcon.addEventListener("click",(()=>{S.open()}));const y=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userDescriptionElement=document.querySelector(t),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,description:this._userDescriptionElement.textContent}}setUserInfo(e,t){this._userNameElement.textContent=e,this._userDescriptionElement.textContent=t}setAvatar(e){this._userAvatarElement.src=e}}(".profile__title",".profile__description",".profile__avatar")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,